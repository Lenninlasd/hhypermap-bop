---
version: '2'
name: bop
services:

  # NOTE: we're fine with using Docker local volumes; it shouldn't be much data.
  zookeeper:
    image: harvardcga/zookeeper:3.4
    ports:
      - 2181:2181
    environment:
      #ZOO_MY_ID: 1  (automatic using KONTENA_SERVICE_INSTANCE_NUMBER in the entrypoint script)
      ZOO_SERVERS: server.1=${project}-zookeeper-1:2888:3888 server.2=${project}-zookeeper-2:2888:3888 server.3=${project}-zookeeper-3:2888:3888
      ZOO_AUTOPURGE_PURGE_INTERVAL: 24
      JMXPORT: 9999
      SERVER_JVMFLAGS: -Xmx500M -XX:+CrashOnOutOfMemoryError
    deploy:
      wait_for_port: 2181
    instances: 3
    affinity:
      # Run Zookeeper on the first three Solr nodes (same host as Solr).
      # %%i is instance id
      - node==bop-solr-%%i.novalocal
    stateful: true
    health_check:
      protocol: tcp
      port: 2181
      timeout: 10
      interval: 300
      initial_delay: 10

  # For Solr, we treat bop-solr-1 kinda special in that we deliberately do various processing on
  # this node: RT shard is here, SolrCloud's Overseer is here, the node also runs bop-webservice
  # and bop-ingest, and searches
  # go here, new data always comes here first. But not much data here. The primary shards are all
  # on the other nodes.
  solr:
    image: harvardcga/solr:6.4.1-hcga1
    # SolrCloud mode, remote zookeeper.
    command: -c -z ${project}-zookeeper-1:2181,${project}-zookeeper-2:2181,${project}-zookeeper-3:2181
    environment:
      SOLR_HEAP: 6G
      ENABLE_REMOTE_JMX_OPTS: true #port 18983
      #TODO softcommit: only on "RT"?  Otherwise use 1 hour?
      # poll-queue-time: SOLR-7333 default is 25ms but way too small IMO.
      # NOTE: auto-commit and most other settings are in solrconfig, where are they can be changed
      #       without starting/stopping Solr as is needed here in kontena.yml.
      SOLR_OPTS:
        -Dsolr.cloud.replication.poll-queue-time-ms=1000
        -Dsolr.cloud.replication.runners=2
#    hooks:
#      post_start:
#        # Note we have a collection replica placement rule that uses this role.
#        - name: add overseer role to first node
#          cmd: sleep 8 && wget -qO- 'http://localhost:8983/solr/admin/collections?action=ADDROLE\&role=overseer\&node=bop-solr-1.kontena.local:8983_solr'
#          instances: 1
#          oneshot: true
      #TODO log WARN org.apache.solr.core.SolrCore.Request  ?
    depends_on:
      - zookeeper
    deploy:
      wait_for_port: 8983
      min_health: 0.0
    instances: 5
    affinity:
      # %%i is instance id
      - label==bop-solr-%%i
    stateful: true
    volumes:
      - /opt/solr/server/solr/
    health_check:
      protocol: http
      port: 8983
      uri: '/solr/admin/collections?action=CLUSTERSTATUS'
      interval: 60 #seconds
      initial_delay: 200 #seconds. Slightly longer than Solr leaderVoteWait=180sec
      timeout: 10 #seconds

  webservice:
    image: harvardcga/bop-webservice:0.2
    build: ./webservice
    hooks:
      pre_build:
        - name: maven
          cmd: cd webservice && mvn -DskipTests clean validate assembly:assembly
    depends_on:
      - solr
    external_links:
      - loadbalancer-loadbalancer
    environment:
      # see bop-ws.yml
      #dw.logging.level: DEBUG
      dw.solrUrl: http://${project}-solr-3:8983/solr
      dw.solrCollection: bop_tweets2
      dw.server.applicationContextPath: /bopws
      JMX:
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.rmi.port=9999
        -Dcom.sun.management.jmxremote.port=9999
      JAVA_OPTS: -Xmx256M
      KONTENA_LB_INTERNAL_PORT: 8080
      KONTENA_LB_VIRTUAL_PATH: /bopws/
      KONTENA_LB_KEEP_VIRTUAL_PATH: true
    deploy:
      wait_for_port: 8080
    affinity:
      - node==bop-solr-3.novalocal

  # Deprecated; will be removed
  webservice2:
    image: harvardcga/bop-webservice:0.2
    extends: webservice
    environment:
      dw.server.applicationContextPath: /bopws2
      KONTENA_LB_VIRTUAL_PATH: /bopws2/
    affinity:
      - node==bop-solr-4.novalocal

  ingest:
    image: harvardcga/bop-ingest:0.2
    build: ./ingest
    hooks:
      pre_build:
        - name: maven
          cmd: cd ingest && mvn -DskipTests clean validate assembly:assembly
    depends_on:
      - solr
    external_links:
      - kafka-kafka
      - kafka-zookeeper
    environment:
      # see dw.yml
      dw.kafkaSourceTopic: TweetArchiveOutput2
      dw.kafkaConsumer.auto-offset-reset: earliest
      dw.kafkaConsumer.bootstrap-servers: kafka-kafka-1:9092,kafka-kafka-2:9092,kafka-kafka-3:9092
      dw.kafkaConsumer.group-id: solr-bop_tweets2
      dw.kafkaConsumer.max-partition-fetch-bytes: 50000
      # We send to the node containing "RT" (most likely where needed, and kinda needed for our date URP)
      dw.solrConnectionString: http://${project}-solr-1:8983/solr/
      dw.solrCollection: bop_tweets2 #note: update dw.kafkaConsumer.group-id accordingly
      JMX:
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.rmi.port=9999
        -Dcom.sun.management.jmxremote.port=9999
      # NewRatio=1 means 1/2 heap is for young gen since this is ETL.
      JAVA_OPTS: -XX:NewRatio=1 -Xmx384M -XX:+CrashOnOutOfMemoryError
    affinity:
      - node==bop-solr-1.novalocal
    instances: 2