---
version: '2'
name: enrich
services:

  enrich:
    extends:
      file: docker-compose.yml
      service: enrich
    hooks:
      pre_build:
        - name: maven
          cmd: mvn -DskipTests clean validate assembly:assembly
    environment:
      # see dw.yml
      dw.kafkaStreams.auto-offset-reset: earliest
      dw.kafkaStreams.bootstrap-servers: kafka-kafka:9092
      dw.kafkaStreams.zookeeper-connect: kafka-zookeeper-1:2181,kafka-zookeeper-2:2181,kafka-zookeeper-3:2181
      # process in multiple threads (but no more than there are CPUs on this machine)
      dw.kafkaStreams.num-stream-threads: 2
      dw.sentiment.server: ${project}-sent-server:1234
      dw.geoAdmin.solrConnectionString: embedded:///var/solrhome/
      JMX:
       -Dcom.sun.management.jmxremote=true
       -Dcom.sun.management.jmxremote.authenticate=false
       -Dcom.sun.management.jmxremote.ssl=false
       -Dcom.sun.management.jmxremote.local.only=false
       -Dcom.sun.management.jmxremote.rmi.port=9999
       -Dcom.sun.management.jmxremote.port=9999
      JAVA_OPTS: -XX:NewRatio=1 -Dsolr.lock.type=none
    volumes:
      - /media/attached/solr-geo-admin-home:/var/solrhome:ro
    affinity:
       - label==enrich
    #TODO to talk to sent-server on local host, refer via localhost?

  sent-server:
    extends:
      file: docker-compose.yml
      service: sent-server
    volumes:
      - /media/attached/classifier-data:/var/classifier/:ro
    # don't wait-for port; the python app isn't graceful about it
    affinity:
      - label==enrich

  # no solr-geo-admin service here... we embed Solr instead for performance

