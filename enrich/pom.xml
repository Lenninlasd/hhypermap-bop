<!--
  ~ Copyright 2016 President and Fellows of Harvard College
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>edu.harvard.gis.hhypermap</groupId>
    <artifactId>bop-parent-pom</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>etl-enrich</artifactId>
  <version>1.0-SNAPSHOT</version>

  <packaging>jar</packaging>

  <name>etl-enrich</name>
  <description>ETL Kafka to Kafka, enriching each item</description>

  <properties>
    <mainClass>edu.harvard.gis.hhypermap.etl.MainKt</mainClass>
  </properties>

  <dependencies>
    <!-- DropWizard stuff (just for configuration)-->
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-configuration</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-logging</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>3.1.2</version>
    </dependency>
    <!-- note: we want SLF4J + Logback for logging, which is transitively included by
    DropWizard logging.  We don't want Log4j, we we annoyingly have to exclude from various
    Kafka related dependencies. -->

    <!-- Kafka for streaming framework and getting data in and out -->
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-streams</artifactId>
      <version>${kafka.version}</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.msgpack</groupId>
      <artifactId>jackson-dataformat-msgpack</artifactId>
      <version>0.8.10</version>
    </dependency>

    <!-- Solr Core for EmbeddedSolrServer (but brings in a ton of deps) -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${solr.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts-core</artifactId>
      <version>1.14.0</version>
      <scope>runtime</scope>
    </dependency>

    <!-- avoid dependency version conflict by explicitly declaring -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0</version>
    </dependency>

  </dependencies>

  <build>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

    <!-- note parent POM defines various defaults -->
    <plugins>

      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
      </plugin>

      <!-- note: this plugin doesn't support docker-compose, so we do integration-testing
       semi-manually instead of doing a verbose equivalent in something this understands. -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <name>harvardcga/${project.artifactId}</name>
              <build>
                <from>java:openjdk-8-jre-alpine</from>
                <entryPoint>
                  <!-- TODO ? -XX:+UseSerialGC -->
                  <exec>
                    <arg>java</arg>
                    <arg>-Xmx256M</arg>
                    <arg>-cp</arg>
                    <arg>maven/*</arg>
                    <arg>${mainClass}</arg>
                  </exec>
                </entryPoint>
                <assembly>
                  <descriptorRef>artifact-with-dependencies</descriptorRef>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.5.0</version>
        <configuration>
          <mainClass>${mainClass}</mainClass>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>